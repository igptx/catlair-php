------------------------------------------------------------------------
Задача
------------------------------------------------------------------------
	Сделать маршрутизатор, использующий различные выходы VPN через Ethernet, WiFi, GSM. Конкретный VPN определяется в зависимости от используемых портов LAN.

	Приоритеты маршрутов в Inet:
	- Ethernet (активируется при включении WAN)
	- WiFi (активируется в ручную через файл настроек, отключается при появлении Ethernet автоматом)
	- GSM (отключается через файл настроек, отключается при появлении Ethernet или WiFi)


                 LAN  ________  Inet
[2]--(eth0.102)------|        |                      ______ 
                     |        (eth0.103)---[3]-----/      \
[1]--(eth0.102)------|        |                   |        |
                     | Router (GSM)-------[gsm]---|  inet  |
[0]--(eth0.100)------|        |                   |        |
                     |        (wan0)------[wifi]-- \______/
[4]--(eth0.104)------|________|


------------------------------------------------------------------------
Общая схема реализации
------------------------------------------------------------------------
	Оборудование: BPi-R1, MicroSD 8gb.
	Устройство содержит одну сетевую плату и свитч на 5 портов.
	Порты физически расположены  в следующей последоватлеьности: [2][1][0][4] [3]
	Интерфейс 3 (стоящий особняком) настраивается как входящий, получающий адрес от внешнего провайдера. 
	Интерфейсы [2][1] и [0][4]  настраиваются попарно как два независимых VLAN для того что бы к ним можно было подключать пары сетевых устройств.
	На устройстве поднимается сервер DHCP предоставляющий адреса двух разных диапазаонов на порты [2][1] и [0][4]. Настройка осуществляется путем прослушивания DHCP сервером указанных VLAN попарно.
	На устройстве поднимается OpenVPN клиент, с различными конфигурациями выходящими на различные внешние VPN сервера.

------------------------------------------------------------------------
Установка ОС
------------------------------------------------------------------------
	Ссылкаи:
		Статья:	https://www.bananian.org/download
		Сайт ОС: https://www.bananian.org/
		Ссылка для скачивания OS: http://dl.bananian.org/releases/bananian-latest.zip

	Действия:
		На MicroSD заливаем образ OS.
		Вставляется MicroSD в устройство и включается питание. 

	Результат: После включения питания устройства должна начаться загрузка системы. После завершения загрузки появится запрос на ввод логина пароля.

------------------------------------------------------------------------
 Настройка устроства
------------------------------------------------------------------------
	
	Умолчальный логин: root
	Умолчальный пароль: pi
	Запуск конфигурации: bananian-config
	В процессе работу bananian-config можно сменить  умолчальный пароль root.

	Результат: должна работать консоль Dedbian.

------------------------------------------------------------------------
Настройка русского языка для консоли
------------------------------------------------------------------------
Статья: http://debianworld.ru/articles/nastrojka-rusifikaciya-konsoli-v-ubuntu-debian/

Показать настройки локали: locale
Показать текущие локали: locale -a
Установка локали: 
	Запустить: dpkg-reconfigure locales
	Выбрать: ru_RU.UTF-8
Установка пакета консоли: apt-get install console-cyrillic
Перенастройка пакета консоли: sudo dpkg-reconfigure console-cyrillic
Запуск пакета: sudo /etc/init.d/console-cyrillic start
Настройки:/etc/console-cyrillic

	Результат: Наличие русского языка в консоли с переключеним.

------------------------------------------------------------------------
Настройка vlan
------------------------------------------------------------------------
	Описание: Настраиваем физические интерфесы для свича путем редактирования коммандного файла. Файл должен быть исполняемым. Распределяем, каким образом будут связаны внешние порты и их отражение.
	Коммандный файл: /etc/network/if-pre-up.d/swconfig

==BEGIN==
#!/bin/sh
# You have to adjust your /etc/network/interfaces
# Comment out the next line to enable the VLAN configuration:

# The swconfig port number are:
# |2|1|0|4|  |3|

ifconfig eth0 up

swconfig dev eth0 set reset 1
swconfig dev eth0 set enable_vlan 1

#-----------------------------------------------------------
# vlan
#-----------------------------------------------------------
# vlan Red
swconfig dev eth0 vlan 101 set ports '2 1 8t'
# vlan Green
swconfig dev eth0 vlan 102 set ports '0 4 8t'
# vlan Blue inet
swconfig dev eth0 vlan 103 set ports '3 8t'

#-----------------------------------------------------------
# pvid
#-----------------------------------------------------------
swconfig dev eth0 port 2 set pvid 101
swconfig dev eth0 port 1 set pvid 101
swconfig dev eth0 port 0 set pvid 102
swconfig dev eth0 port 4 set pvid 102
swconfig dev eth0 port 3 set pvid 103

#-----------------------------------------------------------
# Apply
#-----------------------------------------------------------
swconfig dev eth0 set apply 1

exit 0
==END==

	Для применения параметров выполнить: /etc/network/interfaces

------------------------------------------------------------------------
 Настройка интерфейсов
------------------------------------------------------------------------

	Описание: Необходимо настроить конфигурацию текущих интерфейсов. В нем требуется перечислить, какой из физических интерфейсов каким образом используется в системе, те будет ли он получать IP адреса снаружи, будет ли статический IP адрес, будет ли подниматься при автостатре.
 
	Конфигурационный файл: /etc/network/interfaces

==BEGIN==
# interfaces(5) file used by ifup(8) and ifdown(8)
auto lo
iface lo inet loopback

# WAN
auto eth0.103
iface eth0.103 inet dhcp

# VLAN 101
auto eth0.101
iface eth0.101 inet static
        address 192.168.113.2
        netmask 255.255.255.0

# VLAN 102
auto eth0.102
iface eth0.102 inet static
        address 192.168.114.3
        netmask 255.255.255.0

# VLAN 103 - unused
#auto eth0.103
#iface eth0.103 inet manual
==END==


	Перезагрузка сети: service networking restart
	Результат: ifconfig должен возвращать перечень интерфейсов eth0.101, eth0.102, eth0.103


------------------------------------------------------------------------
DHCP сервер
------------------------------------------------------------------------
	Описание: Необходимо установить сервер DHCP для раздачи адресов на различные подсети. Используем dhcp3.

	Действия:
		Установка: apt-get install dhcp3-server
		Редактируем конфигурационный файл: nano /etc/dhcp/dhcpd.conf
		Перезапускаем сервер: service isc-dhcp-server restart

	Результат: Подключенные к портам [1][2][0][4] устройства должны получать IP адреса.

------------------------------------------------------------------------
SSH
------------------------------------------------------------------------
	Описание: в целях безопасности запрещаем подключение к SSH через порт VAN, [3], eth0.103. По умолчанию разрешен вход root через SSH. 
	Действия:
		Редактируем файл настроек SSH: #nano /etc/ssh/sshd_config
		Переставляем слушайне SSH на интерфесы [1][2][0][4]
			Прописываем параметр:ListenAddress 192.168.113.1
			Прописываем параметр:ListenAddress 192.168.114.1
		Перезапускаем SSH: #service ssh restart

	Результат: SSH должно перестать работать на порту [3] и должно работаьт на портах [1][2][0][4].

------------------------------------------------------------------------
Настройка сети
------------------------------------------------------------------------
Разрешение проброса пакетов между интерфейсами:
	Редактируем конфиг: nano /etc/sysctl.conf 
		Параметр разрешающий проброс пакетов: net.ipv4.ip_forward=1
	Перезапуск после редактирования:
		sysctl -p
	Изменение параметров на ходу:
		отключить: echo "0" > /proc/sys/net/ipv4/ip_forward 
		включить: echo "1" > /proc/sys/net/ipv4/ip_forward 

IP Маскарад на iptables
	Просмотр таблицы NAT. Если файл пустой или отсуствует, необходимо создать правила.
		iptables -t nat -L -n -v
	Создание правил:
		iptables -A POSTROUTING -t nat -s 192.168.113.0/24 -o eth0.103 -j MASQUERADE
		iptables -A POSTROUTING -t nat -s 192.168.114.0/24 -o eth0.103 -j MASQUERADE
	Сохраненеи правил после изменения. Необходимо только посли создания правил из коммандной строки.
		service iptables-persistent save
	Место храненеия правил маскарада
		/etc/iptables/rules.v4 
	Примененеи текущих настроек iptables.
		service iptables-persistent restart

Памятка маршруты:
	Просмотр маршрутов: route
	Добавить маршрут:route add -net 0.0.0.0 netmask 0.0.0.0 gw 192.168.0.30 dev wlan0
	Удалить маршрут:route del -net 0.0.0.0 netmask 0.0.0.0 gw 192.168.0.30 dev wlan0
	Трассировка: traceroute -n 8.8.8.8

 
Результат: должен быть пинг с любого из интерфесов [2][1][0][4] наружу.

------------------------------------------------------------------------
WiFi
------------------------------------------------------------------------
	Статьи:	http://chingachgook.net/raspberry-pi/banana-pi-nastroyka-wi-fi.html
	
Сомтрим список адаптеров USB: lsusb
Утилиты серевых интерфейсов: apt-get install wireless-tools 
Поддержка WPA PSK: apt-get install wpasupplicant
Поднимаем адаптер: ifconfig wlan0 up
Сканируем точки доступа: iwlist wlan0 scan

Создаем или редактируем файл:/etc/network/wpa_supp.conf
		Заменяем pointssid на ssid выбранной точки
		Заменяем password на пароль шифрования

==BEGIN==
#Without encription
#network={
# ssid="point ssid"
#  key_mgmt=NONE
#}

#With encription
network={
  ssid="point ssid"
  psk="password"
}
==END==

	Добавляем в конфиг: /etc/network/interfaces

==begin==
#auto wlan0
iface wlan0 inet dhcp
wpa-conf /etc/network/wpa_supp.conf
==end==

	Перезапускаем сервис сети: service networking restart
	Проверяем наличие подключения:wpa_cli status

------------------------------------------------------------------------
Установка GSM 
------------------------------------------------------------------------
	Статьи:
		https://www.ylsoftware.com/news/656
		http://linuxhub.ru/viewtopic.php?t=374
		http://vladimir-stupin.blogspot.ru/2012/07/3g-e352-debian-wheezy.html
		https://wiki.debian.org/Modem/3G
		http://lugnsk.org/lugnskru/2011/02/ustanovka-3g-modema-ot-megafon-v-debian-squeeze.html

	Проверяем или ставим: apt-get install usb-modeswitch pppoe ppp

	Мегафон
		Создаем если отсутствует файл: /etc/chatscripts/gprs

==BEGIN==

ABORT           BUSY
ABORT           VOICE
ABORT           "NO CARRIER"
ABORT           "NO DIALTONE"
ABORT           "NO DIAL TONE"
ABORT           "NO ANSWER"
ABORT           "DELAYED"
ABORT           "ERROR"

ABORT           "+CGATT: 0"

""              AT
TIMEOUT         12
OK              ATH
OK              ATE1

# +CPIN provides the SIM card PIN
#OK             "AT+CPIN=1234"

# +CFUN may allow to configure the handset to limit operations to
# GPRS/EDGE/UMTS/etc to save power, but the arguments are not standard
# except for 1 which means "full functionality".
#OK             AT+CFUN=1

OK              AT+CGDCONT=1,"IP","\T","",0,0
OK              ATD*99#
TIMEOUT         22
CONNECT         ""
==END==

		Создаем файл: nano /etc/ppp/megafon

==BEGIN==
# Используемое для подключения устройство
/dev/ttyUSB0

# chat-скрипт, в параметре "-T" передаётся имя точки доступа
connect '/usr/sbin/chat -v -f /etc/chatscripts/gprs -T internet'

#Скорость
115200
#speed 460800

# Надо ли менять маршрут по умолчанию
#defaultroute

# Использовать ли DNS-сервера провайдера
usepeerdns

# Номер ppp-интерфейса (в данном случае будет ppp100)
#unit 100

# Подключаться в случае обрыва
persist

# Перепосылать пакеты авторизации каждые 60 секунд. Позволяет избежать обрыва соединения при отсутствии трафика
chap-interval 60

# Идентификатор соединения, используемый для поиска паролей в соответствующих файлах, так же передаваемый ip-up и ip-down-скриптам
ipparam Megafon

# Имя пользователя (пароль описывается в файле "/etc/ppp/chap-secrets")
user "gdata"

# Отключаем любое сжатие
#nopcomp
#novjccomp
#nobsdcomp
#nodeflate
#noaccomp

# Правильная обработка обрывов соединения
#lcp-echo-interval 2
#lcp-echo-failure 3

# IP адрес мы будем получать от провайдера, а не назначать сами
noipdefault

crtscts
noauth
usepeerdns
==END==

		Добавляем в файл: nano /etc/network/interfaces

==BEGIN==
#GSM modem for megafon
iface ppp0 inet ppp
        provider megafon
==END==

		Перезагрузка сети: service networking restart
		Проверяем наличие подключения ppp0:ifconfig
		Поднять интерфейс:ifup ppp0
		Опустить интерфейс:ifdown ppp0

------------------------------------------------------------------------
VPN сервер
------------------------------------------------------------------------
	Софт: OpenVPN
	Установка: apt-get install openvpn
	Перезапуск: service openvpn restart 
	Файлы сертификаты:
		/etc/openvpn/{subfolder}/ca.crt
		/etc/openvpn/{subfolder}/clientkey.crt
		/etc/openvpn/{subfolder}/clientkey.key
		/etc/openvpn/{subfolder}/ta.crt
		/etc/openvpn/{conf}.conf

Отключение опенвпн из автозагрузки: update-rc.d openvpn disable
Прсмотр конфигов при старте сервисовпрапр

  /etc/default/


------------------------------------------------------------------------
Далее начинает ад и черная магия
------------------------------------------------------------------------

В файл /etc/rc.local добавляем код до "exit 0".

==BEGIN==
# Swamp script control port
/usr/bin/nohup /usr/local/swamp/swcontrol > /dev/null &
==END==

Создаем файлы скриптов для контроля портов:

==BEGIN==
Скрипт контроля: /usr/local/swamp/swcontrol
Скрипт отработки поднятия интерфейсов: /usr/local/swamp/swcontrol.change
==END==

После этого по идее при перезапуске устройства файл скрипт будет работать.

------------------------------------------------------------------------
Памятка
------------------------------------------------------------------------
	Просмотр лога c отслеживанием: tail -f /var/log/syslog
	Просмотр лога последние 50 записей: tail 50 /var/log/syslog
	Отправить в лог: logger string
	Осмотр активности TCP: tcpdump -i {интерфес например eth0} 
	Просмотр маршрутов: route -n {флаг -n означает отключение разрешения имен DNS}




swconfig dev eth0 port 1 get link

скрипты выполняемые после старта системы но до входа пользователя: /etc/rc.local 
папка в воторую складывать мои скрипты /usr/local/sbin
P26